{"version":3,"sources":["../../src/pages/reset-password/reset-password.module.ts","../../src/pages/reset-password/reset-password.ts"],"names":[],"mappings":"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","file":"0.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { ResetPasswordPage } from './reset-password';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ResetPasswordPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(ResetPasswordPage),\r\n  ],\r\n})\r\nexport class ResetPasswordPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/reset-password/reset-password.module.ts","import { OnInit, Component } from '@angular/core';\r\nimport { AlertController, IonicPage, NavController, NavParams, LoadingController, Loading } from 'ionic-angular';\r\n\r\nimport {FormGroup, FormBuilder, Validators} from \"@angular/forms\";\r\nimport { Storage } from '@ionic/storage';\r\nimport { DefaultService } from '../../providers/api/default.service';\r\n\r\n// import { Utils } from '../../utils/utils';\r\nimport * as models  from '../../providers/model/models';\r\n\r\n/**\r\n * Generated class for the AddSecret page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-reset-password',\r\n  templateUrl: 'reset-password.html',\r\n})\r\nexport class ResetPasswordPage implements OnInit {\r\n\r\n  email: any;\r\n  loading: Loading;\r\n  resetPwdFrom: FormGroup;\r\n  SECERET_KEY: string = '';\r\n\r\n  constructor(public navCtrl: NavController, public navParams: NavParams, private alertCtrl: AlertController,\r\n  \tpublic formBuilder: FormBuilder, private api: DefaultService, private loadingCtrl: LoadingController, private storage: Storage\r\n    ) {\r\n  }\r\n\r\n  ngOnInit(): any {\r\n\r\n    this.storage.get('user').then((val) => {\r\n      if (!(val === undefined || val === null)) {\r\n        let loginUser: models.LoginUserResponse = val;\r\n        this.email = loginUser.item.email;      \r\n      }\r\n    });\r\n\r\n    this.resetPwdFrom = this.formBuilder.group({\r\n      email: ['', [Validators.required, Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')]],      \r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.showLoading();\r\n    if (this.resetPwdFrom.valid == true) {\r\n      var request: models.FogotPasswordRequest = {} as models.FogotPasswordRequest;\r\n      request.email = this.email;     \r\n      this.api.usersForgetpasswordPost(request).subscribe(response => {        \r\n          this.storage.set('email', this.email); \r\n          this.navCtrl.push('ChangePasswordPage');          \r\n        },\r\n          error => {\r\n            this.showError(error);          \r\n        });\r\n    } else {\r\n      this.showError('Please fix the error field');          \r\n    }\r\n  }\r\n\r\n  isValid(field: string) {\r\n    let formField = this.resetPwdFrom.controls[field];\r\n    if (formField !== undefined) {\r\n       return (formField.valid || formField.pristine);\r\n    }\r\n    return true;\r\n  }  \r\n\r\n  showLoading() {\r\n    this.loading = this.loadingCtrl.create({\r\n      content: 'Please wait...',\r\n      dismissOnPageChange: true\r\n    });\r\n    this.loading.present();\r\n  }\r\n\r\n  showError(text) {\r\n    this.loading.dismiss();\r\n    let errorMsg = this.getErrorMessage(text)\r\n    let alert = this.alertCtrl.create({\r\n      title: 'Fail',\r\n      subTitle: errorMsg,\r\n      buttons: ['OK']\r\n    });\r\n    alert.present();\r\n  }  \r\n\r\n  getErrorMessage(text): string {\r\n    try {\r\n      var object = JSON.parse(text._body);\r\n      return object.errorMessage;\r\n    } catch (e){\r\n      return text;\r\n    }\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/reset-password/reset-password.ts"],"sourceRoot":""}