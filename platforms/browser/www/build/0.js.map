{"version":3,"sources":["../../src/pages/reset-password/reset-password.module.ts","../../src/pages/reset-password/reset-password.ts"],"names":[],"mappings":"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","file":"0.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ResetPasswordPage } from './reset-password';\n\n@NgModule({\n  declarations: [\n    ResetPasswordPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(ResetPasswordPage),\n  ],\n})\nexport class ResetPasswordPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/reset-password/reset-password.module.ts","import { OnInit, Component } from '@angular/core';\nimport { AlertController, IonicPage, NavController, NavParams, LoadingController, Loading } from 'ionic-angular';\n\nimport {FormGroup, FormBuilder, Validators} from \"@angular/forms\";\nimport { Storage } from '@ionic/storage';\nimport { DefaultApi } from '../../providers/api/DefaultApi';\n\n// import { Utils } from '../../utils/utils';\nimport * as models  from '../../providers/model/models';\n\n/**\n * Generated class for the AddSecret page.\n *\n * See http://ionicframework.com/docs/components/#navigation for more info\n * on Ionic pages and navigation.\n */\n@IonicPage()\n@Component({\n  selector: 'page-reset-password',\n  templateUrl: 'reset-password.html',\n})\nexport class ResetPasswordPage implements OnInit {\n\n  email: any;\n  loading: Loading;\n  resetPwdFrom: FormGroup;\n  SECERET_KEY: string = '';\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, private alertCtrl: AlertController,\n  \tpublic formBuilder: FormBuilder, private api: DefaultApi, private loadingCtrl: LoadingController, private storage: Storage\n    ) {\n  }\n\n  ngOnInit(): any {\n\n    this.storage.get('user').then((val) => {\n      if (!(val === undefined || val === null)) {\n        let loginUser: models.LoginUserResponse = val;\n        this.email = loginUser.item.email;      \n      }\n    });\n\n    this.resetPwdFrom = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')]],      \n    });\n  }\n\n  onSubmit() {\n    this.showLoading();\n    if (this.resetPwdFrom.valid == true) {\n      var request: models.FogotPasswordRequest = {} as models.FogotPasswordRequest;\n      request.email = this.email;     \n      this.api.usersForgetpasswordPost(request).subscribe(response => {        \n          this.storage.set('email', this.email); \n          this.navCtrl.push('ChangePasswordPage');          \n        },\n          error => {\n            this.showError(error);          \n        });\n    } else {\n      this.showError('Please fix the error field');          \n    }\n  }\n\n  isValid(field: string) {\n    let formField = this.resetPwdFrom.controls[field];\n    if (formField !== undefined) {\n       return (formField.valid || formField.pristine);\n    }\n    return true;\n  }  \n\n  showLoading() {\n    this.loading = this.loadingCtrl.create({\n      content: 'Please wait...',\n      dismissOnPageChange: true\n    });\n    this.loading.present();\n  }\n\n  showError(text) {\n    this.loading.dismiss();\n    let errorMsg = this.getErrorMessage(text)\n    let alert = this.alertCtrl.create({\n      title: 'Fail',\n      subTitle: errorMsg,\n      buttons: ['OK']\n    });\n    alert.present();\n  }  \n\n  getErrorMessage(text): string {\n    try {\n      var object = JSON.parse(text._body);\n      return object.errorMessage;\n    } catch (e){\n      return text;\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/reset-password/reset-password.ts"],"sourceRoot":""}