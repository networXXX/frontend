{"version":3,"sources":["../../src/pages/change-password/change-password.module.ts","../../src/pages/change-password/change-password.ts"],"names":[],"mappings":"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","file":"2.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ChangePasswordPage } from './change-password';\n\n@NgModule({\n  declarations: [\n    ChangePasswordPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(ChangePasswordPage),\n  ],\n})\nexport class ChangePasswordPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/change-password/change-password.module.ts","import { OnInit, Component } from '@angular/core';\nimport { AlertController, IonicPage, NavController, NavParams, LoadingController, Loading } from 'ionic-angular';\n\nimport {FormGroup, FormBuilder, FormControl, Validators} from \"@angular/forms\";\nimport { Storage } from '@ionic/storage';\nimport { DefaultApi } from '../../providers/api/DefaultApi';\n\nimport * as models  from '../../providers/model/models';\n\n/**\n * Generated class for the AddSecret page.\n *\n * See http://ionicframework.com/docs/components/#navigation for more info\n * on Ionic pages and navigation.\n */\n@IonicPage()\n@Component({\n  selector: 'page-change-password',\n  templateUrl: 'change-password.html',\n})\nexport class ChangePasswordPage implements OnInit {\n\n  user: {email: string, password: string, confirmPassword: string, changeKey: string}  = \n  {email: '', password: '', confirmPassword: '', changeKey: ''};\n  loading: Loading;\n  chnagePwdFrom: FormGroup;\n  SECERET_KEY: string = '';\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, private alertCtrl: AlertController,\n  \tpublic formBuilder: FormBuilder, private api: DefaultApi, private loadingCtrl: LoadingController, private storage: Storage\n    ) {\n  }\n\n  ngOnInit(): any {    \n    this.storage.get('email').then((val) => {    \n      this.user.email = val;\n    });\n\n    this.chnagePwdFrom = this.formBuilder.group({      \n      email: ['', [Validators.required, Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')]],\n      password: ['', [Validators.required, Validators.pattern('((?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%]).{6,20})')]],\n      confirmPassword: ['', [Validators.required, this.confirmPasswordValidator.bind(this)]],\n      changeKey: ['', [Validators.required]]\n    });\n  }\n\n  onSubmit() {\n    this.showLoading();\n    if (this.chnagePwdFrom.valid === true) {\n\n      var request: models.ChangePasswordRequest = {} as models.FogotPasswordRequest;\n      request.email = this.user.email;\n      request.password = this.user.password;    \n      request.changeKey = this.user.changeKey;\n      this.api.usersChangepasswordPost(request).subscribe(response => {\n          this.storage.set('user', response);         \n          this.navCtrl.push('SecretKeyPage');\n        },\n          error => {\n            this.showError(error);          \n        });\n    } else {\n      this.showError(\"Please fix the error field.\");\n    }\n  }\n\n  isValid(field: string) {\n    let formField = this.chnagePwdFrom.controls[field];\n    if (formField !== undefined) {\n       return (formField.valid || formField.pristine);\n    }\n    return true;\n  }\n\n  confirmPasswordValidator(control: FormControl): {[s: string]: boolean} {\n    if (!(control.value === this.user.password)) {\n          console.log(control.value);\n          console.log(this.user.password);\n      return {invalidConfirmPassword: true};\n    }\n  }\n\n  showLoading() {\n    this.loading = this.loadingCtrl.create({\n      content: 'Please wait...',\n      dismissOnPageChange: true\n    });\n    this.loading.present();\n  }\n\n  showError(text) {\n    this.loading.dismiss();\n    let errorMsg = this.getErrorMessage(text)\n    let alert = this.alertCtrl.create({\n      title: 'Fail',\n      subTitle: errorMsg,\n      buttons: ['OK']\n    });\n    alert.present();\n  }  \n\n  getErrorMessage(text): string {\n    try {\n      var object = JSON.parse(text._body);\n      return object.errorMessage;\n    } catch (e){\n      return text;\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/change-password/change-password.ts"],"sourceRoot":""}