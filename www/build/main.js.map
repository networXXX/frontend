{"version":3,"sources":["../../src/pages/location-list/location-list.ts","../../src/pages/login/login.ts","../../src/pages/logout/logout.ts","../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/providers/configuration.ts","../../src/pages/location-detail/location-detail.ts","../../src/pages/friend-list/friend-list.ts","../../src/pages/request-list/request-list.ts","../../src/pages/about/about.ts","../../src/pages/welcome/welcome.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/providers/variables.ts","../../src/providers/mock-properties.ts","../../src/providers/mock-brokers.ts","../../src/constants/app.constants.ts","../../src/app/app.component.ts","../../src/utils/utils.ts","../../src/pages/request-detail/request-detail.ts","../../src/providers/api/DefaultApi.ts","../../src/providers/property-service-mock.ts","../../src/pages/friend-detail/friend-detail.ts","../../src/providers/broker-service-mock.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {Config, NavController, IonicPage} from 'ionic-angular';\nimport {PropertyService} from '../../providers/property-service-mock';\nimport {LocationDetailPage} from '../location-detail/location-detail';\nimport { HaversineService, GeoCoord } from \"ng2-haversine\";\n//import { RoundPipe } from 'ngx-pipes/src/app/pipes/math/round';\n\nimport leaflet from 'leaflet';\n\n@IonicPage()\n@Component({\n    selector: 'page-location-list',\n    templateUrl: 'location-list.html'\n})\nexport class LocationListPage implements OnInit {\n\n    properties: Array<any>;\n    searchKey: string = \"\";\n    viewMode: string = \"list\";\n    current: GeoCoord = {\n            latitude: 0,\n            longitude: 0\n        };\n    map;\n    markersGroup;\n    constructor(public navCtrl: NavController, public service: PropertyService, \n                public config: Config, private _haversineService: HaversineService) {\n        this.getLocation();\n        this.findAll();\n    }\n\n    ngOnInit(): any {\n        \n    }\n\n    openPropertyDetail(property: any) {\n        this.navCtrl.push(LocationDetailPage, property);\n    }\n\n    onInput(event) {\n        this.service.findByName(this.searchKey)\n            .then(data => {\n                this.properties = data;\n                if (this.viewMode === \"map\") {\n                    this.showMarkers();\n                }\n            })\n            .catch(error => alert(JSON.stringify(error)));\n    }\n\n    onCancel(event) {\n        this.findAll();\n    }\n\n    openAddFriend() {\n        debugger;\n        this.navCtrl.push('AddFriendPage');\n    }\n\n    findAll() {\n        this.service.findAll()\n            .then(data => { \n                this.properties = data;\n\n            })\n            .catch(error => alert(error));\n    }\n\n    getLocation() {\n        if(navigator.geolocation){\n            navigator.geolocation.getCurrentPosition(position => {\n                //this.location = position.coords;\n                console.log(position.coords); \n                //debugger;\n                this.current.latitude = position.coords.latitude;\n                this.current.longitude = position.coords.longitude;\n          });\n        }\n    }\n\n    showMap() {\n        setTimeout(() => {\n            this.map = leaflet.map(\"map\").setView([42.361132, -71.070876], 14);\n            leaflet.tileLayer('http://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}', {\n                attribution: 'Tiles &copy; Esri'\n            }).addTo(this.map);\n            this.showMarkers();\n        })\n    }\n\n    showMarkers() {\n        if (this.markersGroup) {\n            this.map.removeLayer(this.markersGroup);\n        }\n        this.markersGroup = leaflet.layerGroup([]);\n        \n        this.properties.forEach(property => {\n            if (property.lat, property.long) {\n                let myIcon = leaflet.icon({\n                            iconUrl: property.thumbnail,\n                            iconSize: [38, 38],\n                            iconAnchor: [22, 94],\n                            popupAnchor: [-3, -76],\n                            shadowUrl: '',\n                            shadowSize: [68, 95],\n                            shadowAnchor: [22, 94]\n                        });\n                let marker: any = leaflet.marker([property.lat, property.long], \n                        {icon: myIcon, title: property.title}).on('click', event => this.openPropertyDetail(event.target.data));\n\n                marker.data = property;\n                this.markersGroup.addLayer(marker);\n            }\n        });\n        this.map.addLayer(this.markersGroup);\n    }\n\n    calcDistance(property) {\n        if (property.distance == 0) {\n            let location: GeoCoord = {\n                latitude: property.lat,\n                longitude: property.long\n            }\n            property.distance = this._haversineService.getDistanceInKilometers(location, this.current);\n            //property.distance = 2;\n            console.log(property.distance);\n        }\n        \n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/location-list/location-list.ts","import { OnInit, Component } from '@angular/core';\nimport { NavController, AlertController, LoadingController, Loading, IonicPage } from 'ionic-angular';\nimport { DefaultApi } from '../../providers/api/DefaultApi';\nimport { AppConstants } from '../../constants/app.constants';\nimport { Facebook } from '@ionic-native/facebook';\n\nimport { Storage } from '@ionic/storage';\nimport * as models  from '../../providers/model/models';\n\n/**\n * Generated class for the Login page.\n *\n * See http://ionicframework.com/docs/components/#navigation for more info\n * on Ionic pages and navigation.\n */\n@IonicPage()\n@Component({\n  selector: 'page-login',\n  templateUrl: 'login.html',\n})\nexport class LoginPage implements OnInit {\n  loading: Loading;\n  registerCredentials = { email: '', password: '' }; \n  isLoggedIn:boolean = false; \n  users: any;      \n \n  constructor(private nav: NavController,\n    private alertCtrl: AlertController, private loadingCtrl: LoadingController,\n    private api: DefaultApi, private storage: Storage,private fb: Facebook) { \n    fb.getLoginStatus()\n      .then(res => {\n        console.log(res.status);\n        if(res.status === \"connect\") {\n          this.isLoggedIn = true;\n        } else {\n          this.isLoggedIn = false;\n        }\n      })\n      .catch(e => console.log(e));\n  }\n\n  ngOnInit() {\n    this.storage.get('user').then((val) => {\n      if (val !== undefined && val !== null) {\n        //let loginUser: models.LoginUserResponse = val;\n        //if (AppConstants.KEY_STATUS === loginUser.item.status) {\n        this.nav.setRoot('WelcomePage');\n        //}    \n      }\n    });\n  }\n \n  public createAccount(event) {\n    this.nav.push('RegisterPage');\n  }\n\n  public forgetPassword(event) {\n    event.preventDefault();\n    this.nav.push('ResetPasswordPage');\n  }\n\n  public login() {\n    this.showLoading();\n    this.storage.set('user', null); \n    if (this.registerCredentials.email === null || this.registerCredentials.password === null) {\n      return this.showError(\"Please insert credentials\");\n    } else {\n      let request: models.LoginUserRequest = {} as models.LoginUserRequest;\n      request.email = this.registerCredentials.email;\n      request.password = this.registerCredentials.password;\n      this.api.loginPost(request).subscribe(response => {\n        if (response.token !== null) {                       \n          this.storage.set('user', response);          \n          this.nav.setRoot('WelcomePage');\n        } else {\n          this.showError(\"Access Denied\");\n        }\n        this.loading.dismiss();\n      },\n        error => {\n          this.showError(error);                  \n      });\n    }          \n  }  \n\n  loginWithFB() {\n    debugger;\n    this.fb.login(['public_profile', 'user_friends', 'email'])\n      .then(res => {\n        if(res.status === \"connected\") {\n          console.log(res);\n          debugger;\n          this.isLoggedIn = true;\n          this.getUserDetail(res);\n          \n        } else {\n          this.isLoggedIn = false;\n        }\n      })\n      .catch(e => {\n         console.log('Error logging into Facebook', e)\n         console.log(e); \n      });\n  }\n  getUserDetail(res) {\n    let token: string = res.authResponse.accessToken;\n    this.fb.api(\"/\"+res.authResponse.userID+\"/?fields=id,email,name,picture,gender\",[\"public_profile\"])\n      .then(res => {\n        console.log(res);\n        this.users = res;\n        let request: models.LoginWithTokenRequest = {} as models.LoginWithTokenRequest;\n        request.email = this.users.email;\n        request.displayName = this.users.name;\n        request.token = token;\n        this.api.usersLoginwithfacebookPost(request).subscribe(response => {\n          debugger;\n          if (response.token !== null) {                       \n            this.storage.set('user', response);          \n            this.nav.setRoot('WelcomePage');\n          } else {\n            this.showError(\"Access Denied\");\n          }\n          this.loading.dismiss();\n        },\n          error => {\n            this.showError(error);                  \n        });\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n \n  showLoading() {\n    this.loading = this.loadingCtrl.create({\n      content: 'Please wait...',\n      dismissOnPageChange: true\n    });\n    this.loading.present();\n  }\n \n  showError(text) {\n    this.loading.dismiss();\n    let errorMsg = this.getErrorMessage(text)\n    let alert = this.alertCtrl.create({\n      title: 'Fail',\n      subTitle: errorMsg,\n      buttons: ['OK']\n    });\n    alert.present();\n  }  \n\n  getErrorMessage(text): string {\n    try {\n      var object = JSON.parse(text._body);\n      return object.errorMessage;\n    } catch (e){\n      return text;\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\n\n/**\n * Generated class for the Logout page.\n *\n * See http://ionicframework.com/docs/components/#navigation for more info\n * on Ionic pages and navigation.\n */\n@IonicPage()\n@Component({\n  selector: 'page-logout',\n  templateUrl: 'logout.html',\n})\nexport class LogoutPage {\n\n  constructor(public navCtrl: NavController, public navParams: NavParams) {\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad Logout');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/logout/logout.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 120;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 120\n// module chunks = 9","var map = {\n\t\"../pages/activate/activate.module\": [\n\t\t301,\n\t\t4\n\t],\n\t\"../pages/add-friend/add-friend.module\": [\n\t\t300,\n\t\t3\n\t],\n\t\"../pages/change-password/change-password.module\": [\n\t\t302,\n\t\t2\n\t],\n\t\"../pages/location-list/location-list.module\": [\n\t\t303,\n\t\t8\n\t],\n\t\"../pages/login/login.module\": [\n\t\t304,\n\t\t7\n\t],\n\t\"../pages/logout/logout.module\": [\n\t\t305,\n\t\t6\n\t],\n\t\"../pages/register/register.module\": [\n\t\t306,\n\t\t1\n\t],\n\t\"../pages/reset-password/reset-password.module\": [\n\t\t307,\n\t\t0\n\t],\n\t\"../pages/welcome/welcome.module\": [\n\t\t308,\n\t\t5\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 162;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 162\n// module chunks = 9","export class Configuration {\n    apiKey: string;\n    username: string;\n    password: string;\n    accessToken: string | (() => string);\n    withCredentials: boolean;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/configuration.ts","import {Component} from '@angular/core';\nimport {ActionSheetController, ActionSheet, NavController, NavParams, ToastController} from 'ionic-angular';\nimport {FriendDetailPage} from '../friend-detail/friend-detail';\nimport {PropertyService} from '../../providers/property-service-mock';\n\nimport leaflet from 'leaflet';\n\n@Component({\n    selector: 'page-location-detail',\n    templateUrl: 'location-detail.html'\n})\nexport class LocationDetailPage {\n\n    property: any;\n    map;\n    markersGroup;\n    constructor(public actionSheetCtrl: ActionSheetController, public navCtrl: NavController, public navParams: NavParams, public propertyService: PropertyService, public toastCtrl: ToastController) {\n        this.property = this.navParams.data;\n        propertyService.findById(this.property.id).then(\n            property => this.property = property\n        );\n    }\n\n    openBrokerDetail(broker) {\n        this.navCtrl.push(FriendDetailPage, broker);\n    }\n\n    favorite(property) {\n        this.propertyService.favorite(property)\n            .then(property => {\n                let toast = this.toastCtrl.create({\n                    message: 'Property added to your favorites',\n                    cssClass: 'mytoast',\n                    duration: 1000\n                });\n                toast.present(toast);\n            });\n    }\n\n    share(property) {\n        let actionSheet: ActionSheet = this.actionSheetCtrl.create({\n            title: 'Share via',\n            buttons: [\n                {\n                    text: 'Twitter',\n                    handler: () => console.log('share via twitter')\n                },\n                {\n                    text: 'Facebook',\n                    handler: () => console.log('share via facebook')\n                },\n                {\n                    text: 'Email',\n                    handler: () => console.log('share via email')\n                },\n                {\n                    text: 'Cancel',\n                    role: 'cancel',\n                    handler: () => console.log('cancel share')\n                }\n            ]\n        });\n\n        actionSheet.present();\n    }\n\n    showMap(property) {\n        setTimeout(() => {\n            this.map = leaflet.map(\"map\").setView([property.lat, property.long], 14);\n            leaflet.tileLayer('http://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}', {\n                attribution: 'Tiles &copy; Esri'\n            }).addTo(this.map);\n            this.showMarkers(property);\n        })\n    }\n\n    showMarkers(property) {\n        if (this.markersGroup) {\n            this.map.removeLayer(this.markersGroup);\n        }\n        this.markersGroup = leaflet.layerGroup([]);\n        \n        if (property.lat, property.long) {\n                let myIcon = leaflet.icon({\n                            iconUrl: property.thumbnail,\n                            iconSize: [38, 38],\n                            iconAnchor: [22, 94],\n                            popupAnchor: [-3, -76],\n                            shadowUrl: '',\n                            shadowSize: [68, 95],\n                            shadowAnchor: [22, 94]\n                        });\n                let marker: any = leaflet.marker([property.lat, property.long], \n                        {icon: myIcon, title: property.title});\n\n                marker.data = property;\n                this.markersGroup.addLayer(marker);\n            }\n        this.map.addLayer(this.markersGroup);\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/location-detail/location-detail.ts","import {Component} from '@angular/core';\nimport {NavController} from 'ionic-angular';\nimport {BrokerService} from '../../providers/broker-service-mock';\nimport {FriendDetailPage} from '../friend-detail/friend-detail';\n\n@Component({\n    selector: 'page-friend-list',\n    templateUrl: 'friend-list.html'\n})\nexport class FriendListPage {\n\n    brokers: Array<any>;\n\n    constructor(public navCtrl: NavController, public service: BrokerService) {\n        service.findAll().then(data => this.brokers = data);\n    }\n\n    openBrokerDetail(broker) {\n        this.navCtrl.push(FriendDetailPage, broker);\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/friend-list/friend-list.ts","import { OnInit, Component } from '@angular/core';\nimport { AlertController, IonicPage, NavController, NavParams, LoadingController, Loading } from 'ionic-angular';\n\nimport { DefaultApi } from '../../providers/api/DefaultApi';\nimport { RequestDetailPage } from '../request-detail/request-detail';\nimport * as models  from '../../providers/model/models';\nimport { Storage } from '@ionic/storage';\nimport { Utils } from '../../utils/utils';\n\n@Component({\n    selector: 'page-request-list',\n    templateUrl: 'request-list.html'\n})\nexport class RequestListPage implements OnInit {\n\n  loading: Loading;\n  icons: string[];\n  items: Array<models.User>;\n  noMoreItemsAvailable: boolean = false; \n\n  searchInput: string = '';\n  QUERY_STR: string = '';\n  LIMIT: string = '15'\n  CURSOR: string = undefined;\n  SEARCH_TEXT: string = undefined;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, private api: DefaultApi,\n              private storage: Storage, private loadingCtrl: LoadingController, private alertCtrl: AlertController) {\n    this.items = [];    \n  }\n\n  ngOnInit(): any {\n\n    this.storage.get('user').then((val) => {  \n      if (val === undefined || val === null) {\n        this.navCtrl.setRoot('LoginPage');\n      } else {\n        let loginUser: models.LoginUserResponse = val; \n        this.QUERY_STR = 'userId:' + loginUser.item.id;   \n        this.api.configuration = Utils.getConfiguration(loginUser); \n        //this.getUsers(this.QUERY_STR);  \n      }        \n    });    \n  }  \n\n  getUsers(query:string) {\n    if (this.noMoreItemsAvailable == false) {\n      this.showLoading(); \n    }\n    this.api.usersSearchGet(query, this.LIMIT, this.CURSOR).subscribe(response => {   \n        if (response != null && response.items.length > 0) {                    \n          response.items.forEach(property => {\n            this.items.push(property);\n          });\n          this.CURSOR = response.nextPageToken;\n          this.noMoreItemsAvailable = true;\n        }\n        this.closeLoading();\n      },\n        error => {\n          this.showError(error);\n      });\n  }\n\n  doInfinite(infiniteScroll) {\n    if (this.noMoreItemsAvailable == true) {\n      this.noMoreItemsAvailable = false;\n      setTimeout(() => {\n        if (this.SEARCH_TEXT !== undefined) {\n          this.getUsers(this.SEARCH_TEXT);\n        } else {\n          this.getUsers(this.QUERY_STR);\n        }\n        \n        infiniteScroll.complete();\n      }, 500);\n    }\n  }\n\n\n  itemTapped(event, item) {\n    console.log(\"itemTapped\");\n    console.log(item)\n    this.navCtrl.push(RequestDetailPage, { 'secret': item });\n  }\n\n  addItem(item) {\n\n  }\n\n  onInput(event) {\n    \n    if (this.searchInput.length >= 3) {\n      this.items = [];\n      this.CURSOR = undefined;\n      this.SEARCH_TEXT = this.QUERY_STR + '&searchText:' + this.searchInput;\n      this.getUsers(this.SEARCH_TEXT);\n    } else if (this.searchInput.length == 0) {\n      this.SEARCH_TEXT = undefined;\n      this.CURSOR = undefined;\n      this.items = [];\n      this.getUsers(this.QUERY_STR);\n    } \n\n    \n  }\n\n  onCancel(event) {\n\n  }\n\n  // presentConfirm(event, secret) {\n  //   let alert = this.alertCtrl.create({\n  //     title: 'Confirm delete',\n  //     message: 'Do you want to delete this secret?',\n  //     buttons: [\n  //       {\n  //         text: 'Cancel',\n  //         role: 'cancel',\n  //         handler: () => {\n  //           //console.log('Cancel clicked');\n  //         }\n  //       },\n  //       {\n  //         text: 'Ok',\n  //         handler: () => {            \n  //           this.deleteItem(secret);\n  //         }\n  //       }\n  //     ]\n  //   });\n  //   alert.present();\n  // }  \n\n  openAdd() {\n    this.navCtrl.push('AddSecret');\n  }\n\n  showLoading() {\n    this.loading = this.loadingCtrl.create({\n      content: 'Please wait...'\n    });\n    this.loading.present();\n  }\n\n  closeLoading() {\n    this.loading.dismiss();\n  }\n\n  showError(text) {\n    this.loading.dismiss();\n   \n    let errorMsg = this.getErrorMessage(text)\n    let alert = this.alertCtrl.create({\n      title: 'Fail',\n      subTitle: errorMsg,\n      buttons: ['OK']\n    });\n    alert.present();\n  }  \n\n  getErrorMessage(text): string {\n    try {\n      var object = JSON.parse(text._body);\n      return object.errorMessage;\n    } catch (e){\n      return text;\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/request-list/request-list.ts","import { Component } from '@angular/core';\n\nimport { NavController } from 'ionic-angular';\n\n@Component({\n    selector: 'page-about',\n    templateUrl: 'about.html'\n})\nexport class AboutPage {\n\n  constructor(public navCtrl: NavController) {\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/about/about.ts","import {OnInit, Component} from '@angular/core';\nimport { AlertController, IonicPage, NavController, NavParams, LoadingController, Loading } from 'ionic-angular';\nimport { Storage } from '@ionic/storage';\n\n@IonicPage()\n@Component({\n    selector: 'page-welcome',\n    templateUrl: 'welcome.html'\n})\nexport class WelcomePage implements OnInit {\n\n\tconstructor(public navCtrl: NavController, public navParams: NavParams,\n              private storage: Storage, private loadingCtrl: LoadingController, private alertCtrl: AlertController) {\n\t    \n\t}\n\n\tngOnInit(): any {\n\t\tthis.storage.get('user').then((val) => {  \n\n\t      if (val === undefined || val === null) {\n\t        this.navCtrl.setRoot('LoginPage');\n\t      } else {\n\t        // let loginUser: models.LoginUserResponse = val; \n\t        // this.QUERY_STR = 'userId:' + loginUser.item.id;   \n\t        // this.api.configuration = Utils.getConfiguration(loginUser); \n\t        // this.getSecrets(this.QUERY_STR);  \n\t      }        \n\t    });  \n\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/welcome/welcome.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { HttpModule } from '@angular/http';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { HaversineService } from \"ng2-haversine\";\nimport { NgPipesModule } from 'ngx-pipes';\n\nimport { DefaultApi } from './../providers/api/DefaultApi';\nimport { AppConstants } from './../constants/app.constants';\nimport { MyApp } from './app.component';\n//import {WelcomePage} from '../pages/welcome/welcome';\nimport {LocationListPage} from '../pages/location-list/location-list';\nimport {LocationDetailPage} from '../pages/location-detail/location-detail';\nimport {FriendListPage} from '../pages/friend-list/friend-list';\nimport {FriendDetailPage} from '../pages/friend-detail/friend-detail';\nimport {RequestListPage} from '../pages/request-list/request-list';\nimport {RequestDetailPage} from '../pages/request-detail/request-detail';\nimport {AboutPage} from '../pages/about/about';\nimport {PropertyService} from \"../providers/property-service-mock\";\nimport {BrokerService} from \"../providers/broker-service-mock\";\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { LoginPage } from '../pages/login/login';\nimport { IonicStorageModule } from '@ionic/storage';\nimport { LogoutPage } from '../pages/logout/logout';\nimport { Facebook } from '@ionic-native/facebook';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    //WelcomePage,\n    AboutPage,\n    LocationListPage,\n    LocationDetailPage,\n    RequestListPage,\n    RequestDetailPage,\n    FriendListPage,\n    FriendDetailPage,\n    LoginPage,\n    LogoutPage\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    NgPipesModule,\n    IonicModule.forRoot(MyApp),\n    IonicStorageModule.forRoot()\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    //WelcomePage,\n    AboutPage,\n    LocationListPage,\n    LocationDetailPage,\n    RequestListPage,\n    RequestDetailPage,\n    FriendListPage,\n    FriendDetailPage,\n    LoginPage,\n    LogoutPage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    PropertyService,\n    BrokerService,\n    HaversineService,\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\n    AppConstants,\n    DefaultApi,\n    Facebook\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { InjectionToken } from '@angular/core';\n\nexport const BASE_PATH = new InjectionToken('basePath');\nexport const COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/variables.ts","let properties: Array<any> = [\n    {\n        id: 1,\n        address: \"18 Henry st\",\n        city: \"Cambridge\",\n        state: \"MA\",\n        zip: \"01742\",\n        price: \"$975,000\",\n        title: \"Lâm Ngọc Hằng\",\n        bedrooms: 4,\n        bathrooms: 3,\n        long: -71.11095,\n        lat: 42.35663,\n        distance: 0,\n        locatedAt: \"2017-08-10T18:03:40.887\",\n        picture: \"https://s3-us-west-1.amazonaws.com/sfdc-demo/realty/house01.jpg\",\n        //thumbnail: \"https://s3-us-west-1.amazonaws.com/sfdc-demo/realty/house01sq.jpg\",\n        thumbnail: \"https://scontent-lax3-2.xx.fbcdn.net/v/t1.0-9/15894994_401920850147680_17897310796082713_n.jpg?oh=62f4a663cfa69d91ec7c8d96b0b08330&oe=59EF28A0\",\n        tags: \"colonial\",\n        description: \"Lorem ipsum dolor sit amet\",\n        broker: {\n            id: 1,\n            name: \"Caroline Kingsley\",\n            title: \"Senior Broker\",\n            picture: \"https://s3-us-west-1.amazonaws.com/sfdc-demo/people/caroline_kingsley.jpg\"\n        }\n    },\n    {\n        id: 2,\n        address: \"24 Pearl st\",\n        city: \"Cambridge\",\n        state: \"MA\",\n        zip: \"02420\",\n        price: \"$1,200,000\",\n        //title: \"Ultimate Sophistication\",\n        title: \"Lemth Nguyen\",\n        bedrooms: 5,\n        bathrooms: 4,\n        long: -71.10869,\n        lat: 42.359103,\n        distance: 0,\n        locatedAt: \"2017-08-10T18:03:40.887\",\n        picture: \"https://s3-us-west-1.amazonaws.com/sfdc-demo/realty/house02.jpg\",\n        //thumbnail: \"https://s3-us-west-1.amazonaws.com/sfdc-demo/realty/house02sq.jpg\",\n        thumbnail: \"https://scontent-lax3-2.xx.fbcdn.net/v/t1.0-1/c57.0.240.240/p240x240/12523973_10205927663843739_1485480924116733747_n.jpg?oh=8e107b199d7e39db98c7d4d92f57d32b&oe=5A351E19\",\n        tags: \"colonial\",\n        description: \"Lorem ipsum dolor sit amet\",\n        broker: {\n            id: 1,\n            name: \"Caroline Kingsley\",\n            title: \"Senior Broker\",\n            picture: \"https://s3-us-west-1.amazonaws.com/sfdc-demo/people/caroline_kingsley.jpg\"\n        }\n    },\n    {\n        id: 3,\n        address: \"61 West Cedar st\",\n        city: \"Boston\",\n        state: \"MA\",\n        zip: \"02420\",\n        price: \"$825,000\",\n        title: \"Quản Thị Nga\",\n        bedrooms: 5,\n        bathrooms: 4,\n        long: -71.070061,\n        lat: 42.359986,\n        distance: 0,\n        locatedAt: \"2017-08-10T18:03:40.887\",\n        picture: \"https://s3-us-west-1.amazonaws.com/sfdc-demo/realty/house03.jpg\",\n        thumbnail: \"https://scontent-lax3-2.xx.fbcdn.net/v/t1.0-1/p240x240/19989469_1217389091723233_2133214409771178201_n.jpg?oh=d709792a479eb5dbcabce82cdc6c0b23&oe=59EDE5BB\",\n        tags: \"contemporary\",\n        description: \"Lorem ipsum dolor sit amet\",\n        broker: {\n            id: 2,\n            name: \"Michael Jones\",\n            title: \"Senior Broker\",\n            picture: \"https://s3-us-west-1.amazonaws.com/sfdc-demo/people/michael_jones.jpg\"\n        }\n    },\n    {\n        id: 4,\n        address: \"32 Prince st\",\n        city: \"Cambridge\",\n        state: \"MA\",\n        zip: \"02420\",\n        price: \"$930,000\",\n        title: \"Thuy Duong Nguyen\",\n        bedrooms: 5,\n        bathrooms: 4,\n        long: -71.110448,\n        lat: 42.360642,\n        distance: 0,\n        locatedAt: \"2017-08-10T18:03:40.887\",\n        picture: \"https://s3-us-west-1.amazonaws.com/sfdc-demo/realty/house04.jpg\",\n        thumbnail: \"https://scontent-lax3-2.xx.fbcdn.net/v/t1.0-1/p240x240/12645228_934705903303420_8030945404463088014_n.jpg?oh=3874e2458f46ff84b33294beb72f3475&oe=5A354A61\",\n        tags: \"victorian\",\n        description: \"Lorem ipsum dolor sit amet\",\n        broker: {\n            id: 3,\n            name: \"Jonathan Bradley\",\n            title: \"Senior Broker\",\n            picture: \"https://s3-us-west-1.amazonaws.com/sfdc-demo/people/jonathan_bradley.jpg\"\n        }\n    },\n    {\n        id: 5,\n        address: \"211 Charles Street\",\n        city: \"Boston\",\n        state: \"MA\",\n        zip: \"02420\",\n        price: \"$850,000\",\n        title: \"Quan Lam\",\n        bedrooms: 3,\n        bathrooms: 2,\n        long: -71.084454,\n        lat: 42.368168,\n        distance: 0,\n        locatedAt: \"2017-08-10T18:03:40.887\",\n        picture: \"https://s3-us-west-1.amazonaws.com/sfdc-demo/realty/house05.jpg\",\n        thumbnail: \"https://scontent-lax3-2.xx.fbcdn.net/v/t1.0-1/p240x240/12274566_10153727525339812_7750744222810759303_n.jpg?oh=d3e313eea79e7b6b87f1160b4a6c1471&oe=5A2D4C7C\",\n        tags: \"contemporary\",\n        description: \"Lorem ipsum dolor sit amet\",\n        broker: {\n            id: 4,\n            name: \"Jennifer Wu\",\n            title: \"Senior Broker\",\n            picture: \"https://s3-us-west-1.amazonaws.com/sfdc-demo/people/jennifer_wu.jpg\"\n        }\n    },\n    {\n        id: 6,\n        address: \"448 Hanover st\",\n        city: \"Boston\",\n        state: \"MA\",\n        zip: \"02420\",\n        price: \"$725,000\",\n        title: \"Vy Thanh\",\n        bedrooms: 4,\n        bathrooms: 2,\n        long: -71.052617,\n        lat: 42.366855,\n        distance: 0,\n        locatedAt: \"2017-08-10T18:03:40.887\",\n        picture: \"https://s3-us-west-1.amazonaws.com/sfdc-demo/realty/house06.jpg\",\n        thumbnail: \"https://scontent-lax3-2.xx.fbcdn.net/v/t1.0-1/p240x240/20621957_872823652868115_5458391622460968658_n.jpg?oh=123da856e05cd63316d0d39c7590188d&oe=59EFF4AE\",\n        tags: \"colonial\",\n        description: \"Lorem ipsum dolor sit amet\",\n        broker: {\n            id: 5,\n            name: \"Olivia Green\",\n            title: \"Senior Broker\",\n            picture: \"https://s3-us-west-1.amazonaws.com/sfdc-demo/people/olivia_green.jpg\"\n        }\n    },\n    {\n        id: 7,\n        address: \"127 Endicott st\",\n        city: \"Boston\",\n        state: \"MA\",\n        zip: \"02420\",\n        price: \"$450,000\",\n        title: \"Lan Lan Hoang\",\n        bedrooms: 3,\n        bathrooms: 1,\n        long: -71.057352,\n        lat: 42.365003,\n        distance: 0,\n        locatedAt: \"2017-08-10T18:03:40.887\",\n        picture: \"https://s3-us-west-1.amazonaws.com/sfdc-demo/realty/house07.jpg\",\n        thumbnail: \"https://scontent-lax3-2.xx.fbcdn.net/v/t1.0-1/p240x240/19059722_1568088983225607_4271968378881729116_n.jpg?oh=d4414e8a2db46cd39fe8d436f6ed9748&oe=5A1F17E0\",\n        tags: \"colonial\",\n        description: \"Lorem ipsum dolor sit amet\",\n        broker: {\n            id: 6,\n            name: \"Miriam Aupont\",\n            title: \"Senior Broker\",\n            picture: \"https://s3-us-west-1.amazonaws.com/sfdc-demo/people/miriam_aupont.jpg\"\n        }\n    },\n    {\n        id: 8,\n        address: \"48 Brattle st\",\n        city: \"Cambridge\",\n        state: \"MA\",\n        zip: \"02420\",\n        price: \"$450,000\",\n        title: \"Minh Thu Nguyen\",\n        bedrooms: 5,\n        bathrooms: 4,\n        long: -71.121653,\n        lat: 42.374117,\n        distance: 0,\n        locatedAt: \"2017-08-10T18:03:40.887\",\n        picture: \"https://s3-us-west-1.amazonaws.com/sfdc-demo/realty/house10.jpg\",\n        thumbnail: \"https://scontent-lax3-2.xx.fbcdn.net/v/t1.0-1/p240x240/20621766_507619646240222_7223858202266566665_n.jpg?oh=47973a87b3a495eee7a2dc6d66355d1d&oe=59EAE8D9\",\n        tags: \"victorian\",\n        description: \"Lorem ipsum dolor sit amet\",\n        broker: {\n            id: 7,\n            name: \"Michelle Lambert\",\n            title: \"Senior Broker\",\n            picture: \"https://s3-us-west-1.amazonaws.com/sfdc-demo/people/michelle_lambert.jpg\"\n        }\n    },\n    {\n        id: 9,\n        address: \"121 Harborwalk\",\n        city: \"Boston\",\n        state: \"MA\",\n        zip: \"02420\",\n        price: \"$450,000\",\n        title: \"Tuyen Nguyen\",\n        bedrooms: 3,\n        bathrooms: 3,\n        long: -71.049327,\n        lat: 42.35695,\n        distance: 0,\n        locatedAt: \"2017-08-10T18:03:40.887\",\n        picture: \"https://s3-us-west-1.amazonaws.com/sfdc-demo/realty/house09.jpg\",\n        thumbnail: \"https://scontent-lax3-2.xx.fbcdn.net/v/t1.0-1/p240x240/20621896_1619721901371873_8757437168574382787_n.jpg?oh=5ea18328e06b5edc92d5e0baca7b4892&oe=59F194A5\",\n        tags: \"contemporary\",\n        description: \"Lorem ipsum dolor sit amet\",\n        broker: {\n            id: 2,\n            name: \"Michael Jones\",\n            title: \"Senior Broker\",\n            picture: \"https://s3-us-west-1.amazonaws.com/sfdc-demo/people/michael_jones.jpg\"\n        }\n    },\n    {\n        id: 10,\n        address: \"503 Park Drive\",\n        city: \"Boston\",\n        state: \"MA\",\n        zip: \"02420\",\n        price: \"$650,000\",\n        title: \"City Living\",\n        bedrooms: 2,\n        bathrooms: 2,\n        long: -71.105475,\n        lat: 42.347400,\n        distance: 0,\n        locatedAt: \"2017-08-10T18:03:40.887\",\n        picture: \"https://s3-us-west-1.amazonaws.com/sfdc-demo/realty/house08.jpg\",\n        thumbnail: \"https://s3-us-west-1.amazonaws.com/sfdc-demo/realty/house08sq.jpg\",\n        tags: \"contemporary\",\n        description: \"Lorem ipsum dolor sit amet\",\n        broker: {\n            id: 1,\n            name: \"Caroline Kingsley\",\n            title: \"Senior Broker\",\n            picture: \"https://s3-us-west-1.amazonaws.com/sfdc-demo/people/caroline_kingsley.jpg\"\n        }\n    },\n    {\n        id: 11,\n        address: \"95 Gloucester st\",\n        city: \"Boston\",\n        state: \"MA\",\n        zip: \"02420\",\n        price: \"$690,000\",\n        title: \"Luck Yong\",\n        bedrooms: 3,\n        bathrooms: 3,\n        lat: 42.349693,\n        long: -71.084407,\n        distance: 0,\n        locatedAt: \"2017-08-10T18:03:40.887\",\n        picture: \"https://s3-us-west-1.amazonaws.com/sfdc-demo/realty/house11.jpg\",\n        thumbnail: \"https://scontent-lax3-2.xx.fbcdn.net/v/t1.0-1/p240x240/20525477_10154764283654212_7155418011956367437_n.jpg?oh=857daeeb66efa2fef114b73c7e5c7076&oe=5A2FA671\",\n        tags: \"contemporary\",\n        description: \"Lorem ipsum dolor sit amet\",\n        broker: {\n            id: 4,\n            name: \"Jennifer Wu\",\n            title: \"Senior Broker\",\n            picture: \"https://s3-us-west-1.amazonaws.com/sfdc-demo/people/jennifer_wu.jpg\"\n        }\n    },\n    {\n        id: 12,\n        address: \"145 Commonwealth ave\",\n        city: \"Boston\",\n        state: \"MA\",\n        zip: \"02420\",\n        price: \"$845,000\",\n        title: \"Nguyen Viet Ha\",\n        bedrooms: 4,\n        bathrooms: 3,\n        lat: 42.352466,\n        long: -71.075311,\n        distance: 0,\n        locatedAt: \"2017-08-10T18:03:40.887\",\n        picture: \"https://s3-us-west-1.amazonaws.com/sfdc-demo/realty/house12.jpg\",\n        thumbnail: \"https://scontent-lax3-2.xx.fbcdn.net/v/t1.0-1/p240x240/12799079_1320496074631406_3751514757821920751_n.jpg?oh=3493a9c272b8103192b510b07fc3989b&oe=59F0BC4E\",\n        tags: \"colonial\",\n        description: \"Lorem ipsum dolor sit amet\",\n        broker: {\n            id: 5,\n            name: \"Olivia Green\",\n            title: \"Senior Broker\",\n            picture: \"https://s3-us-west-1.amazonaws.com/sfdc-demo/people/olivia_green.jpg\"\n        }\n    }\n];\n\nexport default properties;\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/mock-properties.ts","let brokers: Array<any> = [\n    {\n        id: 1,\n        name: \"Caroline Kingsley\",\n        title: \"Senior Broker\",\n        phone: \"617-244-3672\",\n        mobilePhone: \"617-244-3672\",\n        email: \"caroline@ionicrealty.com\",\n        picture: \"https://s3-us-west-1.amazonaws.com/sfdc-demo/people/caroline_kingsley.jpg\"\n    },\n    {\n        id: 2,\n        name: \"Michael Jones\",\n        title: \"Senior Broker\",\n        phone: \"617-244-3672\",\n        mobilePhone: \"617-244-3672\",\n        email: \"michael@ionicrealty.com\",\n        picture: \"https://s3-us-west-1.amazonaws.com/sfdc-demo/people/michael_jones.jpg\"\n    },\n    {\n        id: 3,\n        name: \"Jonathan Bradley\",\n        title: \"Senior Broker\",\n        phone: \"617-244-3672\",\n        mobilePhone: \"617-244-3672\",\n        email: \"jonathan@ionicrealty.com\",\n        picture: \"https://s3-us-west-1.amazonaws.com/sfdc-demo/people/jonathan_bradley.jpg\"\n    },\n    {\n        id: 4,\n        name: \"Jennifer Wu\",\n        title: \"Senior Broker\",\n        phone: \"617-244-3672\",\n        mobilePhone: \"617-244-3672\",\n        email: \"jen@ionicrealty.com\",\n        picture: \"https://s3-us-west-1.amazonaws.com/sfdc-demo/people/jennifer_wu.jpg\"\n    },\n    {\n        id: 5,\n        name: \"Olivia Green\",\n        title: \"Senior Broker\",\n        phone: \"617-244-3672\",\n        mobilePhone: \"617-244-3672\",\n        email: \"olivia@ionicrealty.com\",\n        picture: \"https://s3-us-west-1.amazonaws.com/sfdc-demo/people/olivia_green.jpg\"\n    },\n    {\n        id: 6,\n        name: \"Miriam Aupont\",\n        title: \"Senior Broker\",\n        phone: \"617-244-3672\",\n        mobilePhone: \"617-244-3672\",\n        email: \"miriam@ionicrealty.com\",\n        picture: \"https://s3-us-west-1.amazonaws.com/sfdc-demo/people/miriam_aupont.jpg\"\n    },\n    {\n        id: 7,\n        name: \"Michelle Lambert\",\n        title: \"Senior Broker\",\n        phone: \"617-244-3672\",\n        mobilePhone: \"617-244-3672\",\n        email: \"michelle@ionicrealty.com\",\n        picture: \"https://s3-us-west-1.amazonaws.com/sfdc-demo/people/michelle_lambert.jpg\"\n    },\n    {\n        id: 8,\n        name: \"Victor Ochoa\",\n        title: \"Senior Broker\",\n        phone: \"617-244-3672\",\n        mobilePhone: \"617-244-3672\",\n        email: \"victor@ionicrealty.com\",\n        picture: \"https://s3-us-west-1.amazonaws.com/sfdc-demo/people/victor_ochoa.jpg\"\n    }\n];\n\nexport default brokers;\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/mock-brokers.ts","import { Injectable } from '@angular/core';\nimport { Platform } from 'ionic-angular';\n\n@Injectable()\nexport class AppConstants {\n\n  public appVersion: string;\n\n  \n  public static KEY_STATUS: string = 'K';\n\n  constructor(platform: Platform) {\n    // platform.ready().then(() => {\n    // AppVersion.getVersionNumber().then((s) => {\n    //     this.appVersion = s;\n    //     console.log('App version: ' + this.appVersion );\n    //   });\n    // });\n  }\n\n  \n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/constants/app.constants.ts","import {Component, ViewChild} from '@angular/core';\nimport {Nav, Platform, MenuController} from 'ionic-angular';\nimport {StatusBar} from '@ionic-native/status-bar';\nimport {SplashScreen} from '@ionic-native/splash-screen';\nimport { Storage } from '@ionic/storage';\nimport { HaversineService, GeoCoord } from \"ng2-haversine\";\n\nimport { LoginPage } from '../pages/login/login';\nimport { LogoutPage } from '../pages/logout/logout';\nimport {LocationListPage} from '../pages/location-list/location-list';\nimport {FriendListPage} from '../pages/friend-list/friend-list';\nimport {RequestListPage} from '../pages/request-list/request-list';\nimport {WelcomePage} from '../pages/welcome/welcome';\nimport {AboutPage} from '../pages/about/about';\n\n\nexport interface MenuItem {\n    title: string;\n    component: any;\n    icon: string;\n}\n\n@Component({\n    templateUrl: 'app.html'\n})\nexport class MyApp {\n    @ViewChild(Nav) nav: Nav;\n\n    rootPage: any = LoginPage;\n\n    appMenuItems: Array<MenuItem>;\n\n    accountMenuItems: Array<MenuItem>;\n\n    helpMenuItems: Array<MenuItem>;\n\n    constructor(public platform: Platform, public statusBar: StatusBar, public splashScreen: SplashScreen, \n                private _haversineService: HaversineService, private storage: Storage,\n                public menu: MenuController) {\n        this.initializeApp();\n\n        this.appMenuItems = [\n            {title: 'Locations', component: LocationListPage, icon: 'home'},\n            {title: 'Friends', component: FriendListPage, icon: 'people'},\n            {title: 'Request', component: RequestListPage, icon: 'star'},\n            {title: 'Approved', component: WelcomePage, icon: 'checkmark-circle'},\n        ];\n\n        this.accountMenuItems = [\n            {title: 'My Account', component: WelcomePage, icon: 'ios-contact'},\n            {title: 'Logout', component: LogoutPage, icon: 'log-out'},\n        ];\n\n        this.helpMenuItems = [\n            //{title: 'Welcome', component: WelcomePage, icon: 'bookmark'},\n            {title: 'About', component: AboutPage, icon: 'information-circle'}\n        ];\n    }\n\n    initializeApp() {\n        if(navigator.geolocation){\n            navigator.geolocation.getCurrentPosition(position => {\n                //this.location = position.coords;\n                console.log(position.coords); \n                let madrid: GeoCoord = {\n                    latitude: 33.91918,\n                    longitude: -118.416465\n                };\n\n//El Segundo, CA, USA\n//atitude: 33.91918 | Longitude: -118.416465\n\n                let current: GeoCoord = {\n                    latitude: position.coords.latitude,\n                    longitude: position.coords.longitude\n                };\n\n                let meters = this._haversineService.getDistanceInMeters(madrid, current);\n                let kilometers = this._haversineService.getDistanceInKilometers(madrid, current);\n                let miles = this._haversineService.getDistanceInMiles(madrid, current);\n \n                console.log(`\n                    The distance between Current and Bilbao is:\n                        - ${meters} meters\n                        - ${kilometers} kilometers\n                        - ${miles} miles\n                `);\n          });\n        }\n\n        this.platform.ready().then(() => {\n            // Okay, so the platform is ready and our plugins are available.\n            // Here you can do any higher level native things you might need.\n            this.statusBar.styleLightContent();\n            this.splashScreen.hide();\n        });\n    }\n\n    openPage(page) {\n        // close the menu when clicking a link from the menu\n        this.menu.close();\n        // Reset the content nav to have just this page\n        // we wouldn't want the back button to show in this scenario\n        //this.nav.setRoot(page.component);\n        if (page.title == 'Logout') {\n          this.storage.set('user', null);\n          this.nav.setRoot(this.rootPage);\n        } else {\n          this.nav.setRoot(page.component);\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { Injectable } from \"@angular/core\";\nimport * as models  from '../providers/model/models';\nimport { Configuration } from '../providers/configuration';\n\nimport * as CryptoJS from 'crypto-js/crypto-js';\n\n@Injectable()\nexport class Utils {\n\n    static getConfiguration(loginUser: models.LoginUserResponse) : Configuration {\n\t    let configuration:Configuration = new Configuration();\n\t    configuration.apiKey = loginUser.token;\n\t    if (loginUser.auth !== undefined) {\n\t    \tconfiguration.accessToken = loginUser.auth.token;\n\t    }\t    \n\t    configuration.username = loginUser.item.email;\n\t    configuration.withCredentials = false;\n\t    return configuration;\n\t  }\t\n\n\tstatic getDEcryptedCode(pwd: string, key: string): string {\n\t    // Decrypt \n\t    var bytes = CryptoJS.AES.decrypt(pwd.toString(), key);\n\t    var plaintext = bytes.toString(CryptoJS.enc.Utf8);\n\t    return plaintext;\n\t  }\n\n  \tstatic getEncryptCode(pwd: string, key: string): string {\n\t    // Encrypt \n\t    var ciphertext = CryptoJS.AES.encrypt(pwd, key);\n\t    return ciphertext.toString();\n\t  }\n\t \n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils/utils.ts","import {Component} from '@angular/core';\nimport {NavController, NavParams} from 'ionic-angular';\nimport {BrokerService} from '../../providers/broker-service-mock';\n\n@Component({\n    selector: 'page-request-detail',\n    templateUrl: 'request-detail.html'\n})\nexport class RequestDetailPage {\n\n    item: any;\n\n    constructor(public navCtrl: NavController, public navParams: NavParams, public service: BrokerService) {\n        this.item = this.navParams.data;\n        // service.findById(this.broker.id).then(\n        //     broker => this.broker = broker\n        // );\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/request-detail/request-detail.ts","/**\n * network\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 2017-02-05T01:28:32Z\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { Http, Headers, URLSearchParams }                    from '@angular/http';\nimport { RequestMethod, RequestOptions, RequestOptionsArgs } from '@angular/http';\nimport { Response, ResponseContentType }                     from '@angular/http';\n\nimport { Observable }                                        from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\n\nimport * as models                                           from '../model/models';\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n@Injectable()\nexport class DefaultApi {\n\n    protected basePath = 'https://9csrrzydk8.execute-api.us-east-1.amazonaws.com/dev';\n    public defaultHeaders: Headers = new Headers();\n    public configuration: Configuration = new Configuration();\n\n    constructor(protected http: Http, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n        }\n    }\n\n    /**\n     * \n     */\n    public activateOptions(extraHttpRequestParams?: any): Observable<{}> {\n        return this.activateOptionsWithHttpInfo(extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     * @param activateUserRequest \n     */\n    public activatePost(activateUserRequest: models.ActivateUserRequest, extraHttpRequestParams?: any): Observable<models.UserResponse> {\n        return this.activatePostWithHttpInfo(activateUserRequest, extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     * @param id \n     */\n    public friendsIdDelete(id: string, extraHttpRequestParams?: any): Observable<models.FriendResponse> {\n        return this.friendsIdDeleteWithHttpInfo(id, extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     * @param id \n     */\n    public friendsIdGet(id: string, extraHttpRequestParams?: any): Observable<models.FriendResponse> {\n        return this.friendsIdGetWithHttpInfo(id, extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     * @param id \n     */\n    public friendsIdOptions(id: string, extraHttpRequestParams?: any): Observable<{}> {\n        return this.friendsIdOptionsWithHttpInfo(id, extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     * @param id \n     * @param updateFriendRequest \n     */\n    public friendsIdPut(id: string, updateFriendRequest: models.UpdateFriendRequest, extraHttpRequestParams?: any): Observable<models.FriendResponse> {\n        return this.friendsIdPutWithHttpInfo(id, updateFriendRequest, extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     */\n    public friendsOptions(extraHttpRequestParams?: any): Observable<{}> {\n        return this.friendsOptionsWithHttpInfo(extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     * @param insertFriendRequest \n     */\n    public friendsPost(insertFriendRequest: models.InsertFriendRequest, extraHttpRequestParams?: any): Observable<models.FriendResponse> {\n        return this.friendsPostWithHttpInfo(insertFriendRequest, extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     */\n    public loginOptions(extraHttpRequestParams?: any): Observable<{}> {\n        return this.loginOptionsWithHttpInfo(extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     * @param loginUserRequest \n     */\n    public loginPost(loginUserRequest: models.LoginUserRequest, extraHttpRequestParams?: any): Observable<models.LoginUserResponse> {\n        return this.loginPostWithHttpInfo(loginUserRequest, extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     */\n    public logoutOptions(extraHttpRequestParams?: any): Observable<{}> {\n        return this.logoutOptionsWithHttpInfo(extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     * @param logoutRequest \n     */\n    public logoutPost(logoutRequest: models.LogoutRequest, extraHttpRequestParams?: any): Observable<models.LogoutResponse> {\n        return this.logoutPostWithHttpInfo(logoutRequest, extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     */\n    public registerOptions(extraHttpRequestParams?: any): Observable<{}> {\n        return this.registerOptionsWithHttpInfo(extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     * @param registerUserRequest \n     */\n    public registerPost(registerUserRequest: models.RegisterUserRequest, extraHttpRequestParams?: any): Observable<models.RegisterUserResponse> {\n        return this.registerPostWithHttpInfo(registerUserRequest, extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     */\n    public usersChangepasswordOptions(extraHttpRequestParams?: any): Observable<{}> {\n        return this.usersChangepasswordOptionsWithHttpInfo(extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     * @param changePasswordRequest \n     */\n    public usersChangepasswordPost(changePasswordRequest: models.ChangePasswordRequest, extraHttpRequestParams?: any): Observable<models.LoginUserResponse> {\n        return this.usersChangepasswordPostWithHttpInfo(changePasswordRequest, extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     */\n    public usersForgetpasswordOptions(extraHttpRequestParams?: any): Observable<{}> {\n        return this.usersForgetpasswordOptionsWithHttpInfo(extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     * @param fogotPasswordRequest \n     */\n    public usersForgetpasswordPost(fogotPasswordRequest: models.FogotPasswordRequest, extraHttpRequestParams?: any): Observable<models.UserResponse> {\n        return this.usersForgetpasswordPostWithHttpInfo(fogotPasswordRequest, extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     * @param id \n     */\n    public usersIdDelete(id: string, extraHttpRequestParams?: any): Observable<models.UserResponse> {\n        return this.usersIdDeleteWithHttpInfo(id, extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     * @param id \n     */\n    public usersIdGet(id: string, extraHttpRequestParams?: any): Observable<models.UserResponse> {\n        return this.usersIdGetWithHttpInfo(id, extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     * @param id \n     */\n    public usersIdOptions(id: string, extraHttpRequestParams?: any): Observable<{}> {\n        return this.usersIdOptionsWithHttpInfo(id, extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     * @param id \n     * @param updateUserRequest \n     */\n    public usersIdPut(id: string, updateUserRequest: models.UpdateUserRequest, extraHttpRequestParams?: any): Observable<models.UserResponse> {\n        return this.usersIdPutWithHttpInfo(id, updateUserRequest, extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     */\n    public usersLoginwithfacebookOptions(extraHttpRequestParams?: any): Observable<{}> {\n        return this.usersLoginwithfacebookOptionsWithHttpInfo(extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     * @param loginWithTokenRequest \n     */\n    public usersLoginwithfacebookPost(loginWithTokenRequest: models.LoginWithTokenRequest, extraHttpRequestParams?: any): Observable<models.LoginUserResponse> {\n        return this.usersLoginwithfacebookPostWithHttpInfo(loginWithTokenRequest, extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     */\n    public usersLoginwithgoogleOptions(extraHttpRequestParams?: any): Observable<{}> {\n        return this.usersLoginwithgoogleOptionsWithHttpInfo(extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     * @param loginWithTokenRequest \n     */\n    public usersLoginwithgooglePost(loginWithTokenRequest: models.LoginWithTokenRequest, extraHttpRequestParams?: any): Observable<models.LoginUserResponse> {\n        return this.usersLoginwithgooglePostWithHttpInfo(loginWithTokenRequest, extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     * @param query \n     * @param limit \n     * @param cursor \n     */\n    public usersSearchGet(query: string, limit: string, cursor?: string, extraHttpRequestParams?: any): Observable<models.SearchUserResponse> {\n        return this.usersSearchGetWithHttpInfo(query, limit, cursor, extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     */\n    public usersSearchOptions(extraHttpRequestParams?: any): Observable<{}> {\n        return this.usersSearchOptionsWithHttpInfo(extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n\n    /**\n     * \n     * \n     */\n    public activateOptionsWithHttpInfo(extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/activate';\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Options,\n            headers: headers,\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * \n     * \n     * @param activateUserRequest \n     */\n    public activatePostWithHttpInfo(activateUserRequest: models.ActivateUserRequest, extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/activate';\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // verify required parameter 'activateUserRequest' is not null or undefined\n        if (activateUserRequest === null || activateUserRequest === undefined) {\n            throw new Error('Required parameter activateUserRequest was null or undefined when calling activatePost.');\n        }\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        headers.set('Content-Type', 'application/json');\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Post,\n            headers: headers,\n            body: activateUserRequest == null ? '' : JSON.stringify(activateUserRequest), // https://github.com/angular/angular/issues/10612\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * \n     * \n     * @param id \n     */\n    public friendsIdDeleteWithHttpInfo(id: string, extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/friends/${id}'\n                    .replace('${' + 'id' + '}', String(id));\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // verify required parameter 'id' is not null or undefined\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling friendsIdDelete.');\n        }\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        // authentication (networkAuthorizer) required\n        if (this.configuration.apiKey) {\n            headers.set('Authorization', this.configuration.apiKey);\n        }\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Delete,\n            headers: headers,\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * \n     * \n     * @param id \n     */\n    public friendsIdGetWithHttpInfo(id: string, extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/friends/${id}'\n                    .replace('${' + 'id' + '}', String(id));\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // verify required parameter 'id' is not null or undefined\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling friendsIdGet.');\n        }\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        // authentication (networkAuthorizer) required\n        if (this.configuration.apiKey) {\n            headers.set('Authorization', this.configuration.apiKey);\n        }\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Get,\n            headers: headers,\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * \n     * \n     * @param id \n     */\n    public friendsIdOptionsWithHttpInfo(id: string, extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/friends/${id}'\n                    .replace('${' + 'id' + '}', String(id));\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // verify required parameter 'id' is not null or undefined\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling friendsIdOptions.');\n        }\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Options,\n            headers: headers,\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * \n     * \n     * @param id \n     * @param updateFriendRequest \n     */\n    public friendsIdPutWithHttpInfo(id: string, updateFriendRequest: models.UpdateFriendRequest, extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/friends/${id}'\n                    .replace('${' + 'id' + '}', String(id));\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // verify required parameter 'id' is not null or undefined\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling friendsIdPut.');\n        }\n        // verify required parameter 'updateFriendRequest' is not null or undefined\n        if (updateFriendRequest === null || updateFriendRequest === undefined) {\n            throw new Error('Required parameter updateFriendRequest was null or undefined when calling friendsIdPut.');\n        }\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        // authentication (networkAuthorizer) required\n        if (this.configuration.apiKey) {\n            headers.set('Authorization', this.configuration.apiKey);\n        }\n\n        headers.set('Content-Type', 'application/json');\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Put,\n            headers: headers,\n            body: updateFriendRequest == null ? '' : JSON.stringify(updateFriendRequest), // https://github.com/angular/angular/issues/10612\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * \n     * \n     */\n    public friendsOptionsWithHttpInfo(extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/friends';\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Options,\n            headers: headers,\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * \n     * \n     * @param insertFriendRequest \n     */\n    public friendsPostWithHttpInfo(insertFriendRequest: models.InsertFriendRequest, extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/friends';\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // verify required parameter 'insertFriendRequest' is not null or undefined\n        if (insertFriendRequest === null || insertFriendRequest === undefined) {\n            throw new Error('Required parameter insertFriendRequest was null or undefined when calling friendsPost.');\n        }\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        headers.set('Content-Type', 'application/json');\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Post,\n            headers: headers,\n            body: insertFriendRequest == null ? '' : JSON.stringify(insertFriendRequest), // https://github.com/angular/angular/issues/10612\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * \n     * \n     */\n    public loginOptionsWithHttpInfo(extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/login';\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Options,\n            headers: headers,\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * \n     * \n     * @param loginUserRequest \n     */\n    public loginPostWithHttpInfo(loginUserRequest: models.LoginUserRequest, extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/login';\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // verify required parameter 'loginUserRequest' is not null or undefined\n        if (loginUserRequest === null || loginUserRequest === undefined) {\n            throw new Error('Required parameter loginUserRequest was null or undefined when calling loginPost.');\n        }\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        headers.set('Content-Type', 'application/json');\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Post,\n            headers: headers,\n            body: loginUserRequest == null ? '' : JSON.stringify(loginUserRequest), // https://github.com/angular/angular/issues/10612\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * \n     * \n     */\n    public logoutOptionsWithHttpInfo(extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/logout';\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Options,\n            headers: headers,\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * \n     * \n     * @param logoutRequest \n     */\n    public logoutPostWithHttpInfo(logoutRequest: models.LogoutRequest, extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/logout';\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // verify required parameter 'logoutRequest' is not null or undefined\n        if (logoutRequest === null || logoutRequest === undefined) {\n            throw new Error('Required parameter logoutRequest was null or undefined when calling logoutPost.');\n        }\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        // authentication (networkAuthorizer) required\n        if (this.configuration.apiKey) {\n            headers.set('Authorization', this.configuration.apiKey);\n        }\n\n        headers.set('Content-Type', 'application/json');\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Post,\n            headers: headers,\n            body: logoutRequest == null ? '' : JSON.stringify(logoutRequest), // https://github.com/angular/angular/issues/10612\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * \n     * \n     */\n    public registerOptionsWithHttpInfo(extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/register';\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Options,\n            headers: headers,\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * \n     * \n     * @param registerUserRequest \n     */\n    public registerPostWithHttpInfo(registerUserRequest: models.RegisterUserRequest, extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/register';\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // verify required parameter 'registerUserRequest' is not null or undefined\n        if (registerUserRequest === null || registerUserRequest === undefined) {\n            throw new Error('Required parameter registerUserRequest was null or undefined when calling registerPost.');\n        }\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        headers.set('Content-Type', 'application/json');\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Post,\n            headers: headers,\n            body: registerUserRequest == null ? '' : JSON.stringify(registerUserRequest), // https://github.com/angular/angular/issues/10612\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * \n     * \n     */\n    public usersChangepasswordOptionsWithHttpInfo(extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/users/changepassword';\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Options,\n            headers: headers,\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * \n     * \n     * @param changePasswordRequest \n     */\n    public usersChangepasswordPostWithHttpInfo(changePasswordRequest: models.ChangePasswordRequest, extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/users/changepassword';\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // verify required parameter 'changePasswordRequest' is not null or undefined\n        if (changePasswordRequest === null || changePasswordRequest === undefined) {\n            throw new Error('Required parameter changePasswordRequest was null or undefined when calling usersChangepasswordPost.');\n        }\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        // authentication (networkAuthorizer) required\n        if (this.configuration.apiKey) {\n            headers.set('Authorization', this.configuration.apiKey);\n        }\n\n        headers.set('Content-Type', 'application/json');\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Post,\n            headers: headers,\n            body: changePasswordRequest == null ? '' : JSON.stringify(changePasswordRequest), // https://github.com/angular/angular/issues/10612\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * \n     * \n     */\n    public usersForgetpasswordOptionsWithHttpInfo(extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/users/forgetpassword';\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Options,\n            headers: headers,\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * \n     * \n     * @param fogotPasswordRequest \n     */\n    public usersForgetpasswordPostWithHttpInfo(fogotPasswordRequest: models.FogotPasswordRequest, extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/users/forgetpassword';\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // verify required parameter 'fogotPasswordRequest' is not null or undefined\n        if (fogotPasswordRequest === null || fogotPasswordRequest === undefined) {\n            throw new Error('Required parameter fogotPasswordRequest was null or undefined when calling usersForgetpasswordPost.');\n        }\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        headers.set('Content-Type', 'application/json');\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Post,\n            headers: headers,\n            body: fogotPasswordRequest == null ? '' : JSON.stringify(fogotPasswordRequest), // https://github.com/angular/angular/issues/10612\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * \n     * \n     * @param id \n     */\n    public usersIdDeleteWithHttpInfo(id: string, extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/users/${id}'\n                    .replace('${' + 'id' + '}', String(id));\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // verify required parameter 'id' is not null or undefined\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling usersIdDelete.');\n        }\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        // authentication (networkAuthorizer) required\n        if (this.configuration.apiKey) {\n            headers.set('Authorization', this.configuration.apiKey);\n        }\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Delete,\n            headers: headers,\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * \n     * \n     * @param id \n     */\n    public usersIdGetWithHttpInfo(id: string, extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/users/${id}'\n                    .replace('${' + 'id' + '}', String(id));\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // verify required parameter 'id' is not null or undefined\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling usersIdGet.');\n        }\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        // authentication (networkAuthorizer) required\n        if (this.configuration.apiKey) {\n            headers.set('Authorization', this.configuration.apiKey);\n        }\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Get,\n            headers: headers,\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * \n     * \n     * @param id \n     */\n    public usersIdOptionsWithHttpInfo(id: string, extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/users/${id}'\n                    .replace('${' + 'id' + '}', String(id));\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // verify required parameter 'id' is not null or undefined\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling usersIdOptions.');\n        }\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Options,\n            headers: headers,\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * \n     * \n     * @param id \n     * @param updateUserRequest \n     */\n    public usersIdPutWithHttpInfo(id: string, updateUserRequest: models.UpdateUserRequest, extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/users/${id}'\n                    .replace('${' + 'id' + '}', String(id));\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // verify required parameter 'id' is not null or undefined\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling usersIdPut.');\n        }\n        // verify required parameter 'updateUserRequest' is not null or undefined\n        if (updateUserRequest === null || updateUserRequest === undefined) {\n            throw new Error('Required parameter updateUserRequest was null or undefined when calling usersIdPut.');\n        }\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        // authentication (networkAuthorizer) required\n        if (this.configuration.apiKey) {\n            headers.set('Authorization', this.configuration.apiKey);\n        }\n\n        headers.set('Content-Type', 'application/json');\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Put,\n            headers: headers,\n            body: updateUserRequest == null ? '' : JSON.stringify(updateUserRequest), // https://github.com/angular/angular/issues/10612\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * \n     * \n     */\n    public usersLoginwithfacebookOptionsWithHttpInfo(extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/users/loginwithfacebook';\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Options,\n            headers: headers,\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * \n     * \n     * @param loginWithTokenRequest \n     */\n    public usersLoginwithfacebookPostWithHttpInfo(loginWithTokenRequest: models.LoginWithTokenRequest, extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/users/loginwithfacebook';\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // verify required parameter 'loginWithTokenRequest' is not null or undefined\n        if (loginWithTokenRequest === null || loginWithTokenRequest === undefined) {\n            throw new Error('Required parameter loginWithTokenRequest was null or undefined when calling usersLoginwithfacebookPost.');\n        }\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        headers.set('Content-Type', 'application/json');\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Post,\n            headers: headers,\n            body: loginWithTokenRequest == null ? '' : JSON.stringify(loginWithTokenRequest), // https://github.com/angular/angular/issues/10612\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * \n     * \n     */\n    public usersLoginwithgoogleOptionsWithHttpInfo(extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/users/loginwithgoogle';\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Options,\n            headers: headers,\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * \n     * \n     * @param loginWithTokenRequest \n     */\n    public usersLoginwithgooglePostWithHttpInfo(loginWithTokenRequest: models.LoginWithTokenRequest, extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/users/loginwithgoogle';\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // verify required parameter 'loginWithTokenRequest' is not null or undefined\n        if (loginWithTokenRequest === null || loginWithTokenRequest === undefined) {\n            throw new Error('Required parameter loginWithTokenRequest was null or undefined when calling usersLoginwithgooglePost.');\n        }\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        headers.set('Content-Type', 'application/json');\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Post,\n            headers: headers,\n            body: loginWithTokenRequest == null ? '' : JSON.stringify(loginWithTokenRequest), // https://github.com/angular/angular/issues/10612\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * \n     * \n     * @param query \n     * @param limit \n     * @param cursor \n     */\n    public usersSearchGetWithHttpInfo(query: string, limit: string, cursor?: string, extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/users/search';\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // verify required parameter 'query' is not null or undefined\n        if (query === null || query === undefined) {\n            throw new Error('Required parameter query was null or undefined when calling usersSearchGet.');\n        }\n        // verify required parameter 'limit' is not null or undefined\n        if (limit === null || limit === undefined) {\n            throw new Error('Required parameter limit was null or undefined when calling usersSearchGet.');\n        }\n        if (query !== undefined) {\n            queryParameters.set('query', <any>query);\n        }\n\n        if (cursor !== undefined) {\n            queryParameters.set('cursor', <any>cursor);\n        }\n\n        if (limit !== undefined) {\n            queryParameters.set('limit', <any>limit);\n        }\n\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        // authentication (networkAuthorizer) required\n        if (this.configuration.apiKey) {\n            headers.set('Authorization', this.configuration.apiKey);\n        }\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Get,\n            headers: headers,\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * \n     * \n     */\n    public usersSearchOptionsWithHttpInfo(extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/users/search';\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Options,\n            headers: headers,\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/api/DefaultApi.ts","import {Injectable} from '@angular/core';\nimport properties from './mock-properties';\n\n@Injectable()\nexport class PropertyService {\n\n  favoriteCounter: number = 0;\n  favorites: Array<any> = [];\n\n  findAll() {\n    return Promise.resolve(properties);\n  }\n\n  findById(id) {\n    return Promise.resolve(properties[id - 1]);\n  }\n\n  findByName(searchKey: string) {\n    let key: string = searchKey.toUpperCase();\n    return Promise.resolve(properties.filter((property: any) =>\n        (property.title +  ' ' +property.address +  ' ' + property.city + ' ' + property.description).toUpperCase().indexOf(key) > -1));\n  }\n\n  getFavorites() {\n    return Promise.resolve(this.favorites);\n  }\n\n  favorite(property) {\n    this.favoriteCounter = this.favoriteCounter + 1;\n    this.favorites.push({id: this.favoriteCounter, property: property});\n    return Promise.resolve();\n  }\n\n  unfavorite(favorite) {\n    let index = this.favorites.indexOf(favorite);\n    if (index > -1) {\n      this.favorites.splice(index, 1);\n    }\n    return Promise.resolve();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/property-service-mock.ts","import {Component} from '@angular/core';\nimport {NavController, NavParams} from 'ionic-angular';\nimport {BrokerService} from '../../providers/broker-service-mock';\n\n@Component({\n    selector: 'page-friend-detail',\n    templateUrl: 'friend-detail.html'\n})\nexport class FriendDetailPage {\n\n    broker: any;\n\n    constructor(public navCtrl: NavController, public navParams: NavParams, public service: BrokerService) {\n        this.broker = this.navParams.data;\n        service.findById(this.broker.id).then(\n            broker => this.broker = broker\n        );\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/friend-detail/friend-detail.ts","import {Injectable} from '@angular/core';\nimport brokers from './mock-brokers';\n\n@Injectable()\nexport class BrokerService {\n\n    findAll() {\n        return Promise.resolve(brokers);\n    }\n\n    findById(id) {\n        return Promise.resolve(brokers[id - 1]);\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/broker-service-mock.ts"],"sourceRoot":""}